// <auto-generated />
using KAkica.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KAkica.Domain.Migrations
{
    [DbContext(typeof(KAkicaDbContext))]
    [Migration("20190521163116_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KAkica.Domain.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mail1@test.com",
                            Password = "test",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mail2@test.com",
                            Password = "test",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("KAkica.Domain.Models.AppUserPooper", b =>
                {
                    b.Property<int>("PooperId");

                    b.Property<int>("AppUserId");

                    b.HasKey("PooperId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserPoopers");

                    b.HasData(
                        new
                        {
                            PooperId = 1,
                            AppUserId = 1
                        },
                        new
                        {
                            PooperId = 1,
                            AppUserId = 2
                        },
                        new
                        {
                            PooperId = 2,
                            AppUserId = 2
                        });
                });

            modelBuilder.Entity("KAkica.Domain.Models.Pooper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Poopers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "pooper1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "pooper2"
                        });
                });

            modelBuilder.Entity("KAkica.Domain.Models.AppUserPooper", b =>
                {
                    b.HasOne("KAkica.Domain.Models.AppUser", "AppUser")
                        .WithMany("AppUserPoopers")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KAkica.Domain.Models.Pooper", "Pooper")
                        .WithMany("AppUserPoopers")
                        .HasForeignKey("PooperId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
